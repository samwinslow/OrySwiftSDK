//
// RelationshipAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class RelationshipAPI {

    /**
     Check the syntax of an OPL file
     
     - parameter body: (body)  (optional)
     - returns: CheckOplSyntaxResult
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func checkOplSyntax(body: String? = nil) async throws -> CheckOplSyntaxResult {
        return try await checkOplSyntaxWithRequestBuilder(body: body).execute().body
    }

    /**
     Check the syntax of an OPL file
     - POST /opl/syntax/check
     - The OPL file is expected in the body of the request.
     - BASIC:
       - type: http
       - name: oryAccessToken
     - parameter body: (body)  (optional)
     - returns: RequestBuilder<CheckOplSyntaxResult> 
     */
    open class func checkOplSyntaxWithRequestBuilder(body: String? = nil) -> RequestBuilder<CheckOplSyntaxResult> {
        let localVariablePath = "/opl/syntax/check"
        let localVariableURLString = OrySDKAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CheckOplSyntaxResult>.Type = OrySDKAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Create a Relationship
     
     - parameter createRelationshipBody: (body)  (optional)
     - returns: Relationship
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createRelationship(createRelationshipBody: CreateRelationshipBody? = nil) async throws -> Relationship {
        return try await createRelationshipWithRequestBuilder(createRelationshipBody: createRelationshipBody).execute().body
    }

    /**
     Create a Relationship
     - PUT /admin/relation-tuples
     - Use this endpoint to create a relationship.
     - BASIC:
       - type: http
       - name: oryAccessToken
     - parameter createRelationshipBody: (body)  (optional)
     - returns: RequestBuilder<Relationship> 
     */
    open class func createRelationshipWithRequestBuilder(createRelationshipBody: CreateRelationshipBody? = nil) -> RequestBuilder<Relationship> {
        let localVariablePath = "/admin/relation-tuples"
        let localVariableURLString = OrySDKAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createRelationshipBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Relationship>.Type = OrySDKAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete Relationships
     
     - parameter namespace: (query) Namespace of the Relationship (optional)
     - parameter object: (query) Object of the Relationship (optional)
     - parameter relation: (query) Relation of the Relationship (optional)
     - parameter subjectId: (query) SubjectID of the Relationship (optional)
     - parameter subjectSetNamespace: (query) Namespace of the Subject Set (optional)
     - parameter subjectSetObject: (query) Object of the Subject Set (optional)
     - parameter subjectSetRelation: (query) Relation of the Subject Set (optional)
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func deleteRelationships(namespace: String? = nil, object: String? = nil, relation: String? = nil, subjectId: String? = nil, subjectSetNamespace: String? = nil, subjectSetObject: String? = nil, subjectSetRelation: String? = nil) async throws {
        return try await deleteRelationshipsWithRequestBuilder(namespace: namespace, object: object, relation: relation, subjectId: subjectId, subjectSetNamespace: subjectSetNamespace, subjectSetObject: subjectSetObject, subjectSetRelation: subjectSetRelation).execute().body
    }

    /**
     Delete Relationships
     - DELETE /admin/relation-tuples
     - Use this endpoint to delete relationships
     - BASIC:
       - type: http
       - name: oryAccessToken
     - parameter namespace: (query) Namespace of the Relationship (optional)
     - parameter object: (query) Object of the Relationship (optional)
     - parameter relation: (query) Relation of the Relationship (optional)
     - parameter subjectId: (query) SubjectID of the Relationship (optional)
     - parameter subjectSetNamespace: (query) Namespace of the Subject Set (optional)
     - parameter subjectSetObject: (query) Object of the Subject Set (optional)
     - parameter subjectSetRelation: (query) Relation of the Subject Set (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func deleteRelationshipsWithRequestBuilder(namespace: String? = nil, object: String? = nil, relation: String? = nil, subjectId: String? = nil, subjectSetNamespace: String? = nil, subjectSetObject: String? = nil, subjectSetRelation: String? = nil) -> RequestBuilder<Void> {
        let localVariablePath = "/admin/relation-tuples"
        let localVariableURLString = OrySDKAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "namespace": (wrappedValue: namespace?.encodeToJSON(), isExplode: true),
            "object": (wrappedValue: object?.encodeToJSON(), isExplode: true),
            "relation": (wrappedValue: relation?.encodeToJSON(), isExplode: true),
            "subject_id": (wrappedValue: subjectId?.encodeToJSON(), isExplode: true),
            "subject_set.namespace": (wrappedValue: subjectSetNamespace?.encodeToJSON(), isExplode: true),
            "subject_set.object": (wrappedValue: subjectSetObject?.encodeToJSON(), isExplode: true),
            "subject_set.relation": (wrappedValue: subjectSetRelation?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OrySDKAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Query relationships
     
     - parameter pageToken: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter namespace: (query) Namespace of the Relationship (optional)
     - parameter object: (query) Object of the Relationship (optional)
     - parameter relation: (query) Relation of the Relationship (optional)
     - parameter subjectId: (query) SubjectID of the Relationship (optional)
     - parameter subjectSetNamespace: (query) Namespace of the Subject Set (optional)
     - parameter subjectSetObject: (query) Object of the Subject Set (optional)
     - parameter subjectSetRelation: (query) Relation of the Subject Set (optional)
     - returns: Relationships
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRelationships(pageToken: String? = nil, pageSize: Int64? = nil, namespace: String? = nil, object: String? = nil, relation: String? = nil, subjectId: String? = nil, subjectSetNamespace: String? = nil, subjectSetObject: String? = nil, subjectSetRelation: String? = nil) async throws -> Relationships {
        return try await getRelationshipsWithRequestBuilder(pageToken: pageToken, pageSize: pageSize, namespace: namespace, object: object, relation: relation, subjectId: subjectId, subjectSetNamespace: subjectSetNamespace, subjectSetObject: subjectSetObject, subjectSetRelation: subjectSetRelation).execute().body
    }

    /**
     Query relationships
     - GET /relation-tuples
     - Get all relationships that match the query. Only the namespace field is required.
     - BASIC:
       - type: http
       - name: oryAccessToken
     - parameter pageToken: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter namespace: (query) Namespace of the Relationship (optional)
     - parameter object: (query) Object of the Relationship (optional)
     - parameter relation: (query) Relation of the Relationship (optional)
     - parameter subjectId: (query) SubjectID of the Relationship (optional)
     - parameter subjectSetNamespace: (query) Namespace of the Subject Set (optional)
     - parameter subjectSetObject: (query) Object of the Subject Set (optional)
     - parameter subjectSetRelation: (query) Relation of the Subject Set (optional)
     - returns: RequestBuilder<Relationships> 
     */
    open class func getRelationshipsWithRequestBuilder(pageToken: String? = nil, pageSize: Int64? = nil, namespace: String? = nil, object: String? = nil, relation: String? = nil, subjectId: String? = nil, subjectSetNamespace: String? = nil, subjectSetObject: String? = nil, subjectSetRelation: String? = nil) -> RequestBuilder<Relationships> {
        let localVariablePath = "/relation-tuples"
        let localVariableURLString = OrySDKAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page_token": (wrappedValue: pageToken?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "namespace": (wrappedValue: namespace?.encodeToJSON(), isExplode: true),
            "object": (wrappedValue: object?.encodeToJSON(), isExplode: true),
            "relation": (wrappedValue: relation?.encodeToJSON(), isExplode: true),
            "subject_id": (wrappedValue: subjectId?.encodeToJSON(), isExplode: true),
            "subject_set.namespace": (wrappedValue: subjectSetNamespace?.encodeToJSON(), isExplode: true),
            "subject_set.object": (wrappedValue: subjectSetObject?.encodeToJSON(), isExplode: true),
            "subject_set.relation": (wrappedValue: subjectSetRelation?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Relationships>.Type = OrySDKAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Query namespaces
     
     - returns: RelationshipNamespaces
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func listRelationshipNamespaces() async throws -> RelationshipNamespaces {
        return try await listRelationshipNamespacesWithRequestBuilder().execute().body
    }

    /**
     Query namespaces
     - GET /namespaces
     - Get all namespaces
     - BASIC:
       - type: http
       - name: oryAccessToken
     - returns: RequestBuilder<RelationshipNamespaces> 
     */
    open class func listRelationshipNamespacesWithRequestBuilder() -> RequestBuilder<RelationshipNamespaces> {
        let localVariablePath = "/namespaces"
        let localVariableURLString = OrySDKAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RelationshipNamespaces>.Type = OrySDKAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Patch Multiple Relationships
     
     - parameter relationshipPatch: (body)  (optional)
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func patchRelationships(relationshipPatch: [RelationshipPatch]? = nil) async throws {
        return try await patchRelationshipsWithRequestBuilder(relationshipPatch: relationshipPatch).execute().body
    }

    /**
     Patch Multiple Relationships
     - PATCH /admin/relation-tuples
     - Use this endpoint to patch one or more relationships.
     - BASIC:
       - type: http
       - name: oryAccessToken
     - parameter relationshipPatch: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func patchRelationshipsWithRequestBuilder(relationshipPatch: [RelationshipPatch]? = nil) -> RequestBuilder<Void> {
        let localVariablePath = "/admin/relation-tuples"
        let localVariableURLString = OrySDKAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: relationshipPatch)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OrySDKAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
