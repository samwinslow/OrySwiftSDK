//
// IdentityCredentialsOidcProvider.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IdentityCredentialsOidcProvider: Codable, JSONEncodable, Hashable {

    public var initialAccessToken: String?
    public var initialIdToken: String?
    public var initialRefreshToken: String?
    public var provider: String?
    public var subject: String?

    public init(initialAccessToken: String? = nil, initialIdToken: String? = nil, initialRefreshToken: String? = nil, provider: String? = nil, subject: String? = nil) {
        self.initialAccessToken = initialAccessToken
        self.initialIdToken = initialIdToken
        self.initialRefreshToken = initialRefreshToken
        self.provider = provider
        self.subject = subject
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case initialAccessToken = "initial_access_token"
        case initialIdToken = "initial_id_token"
        case initialRefreshToken = "initial_refresh_token"
        case provider
        case subject
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(initialAccessToken, forKey: .initialAccessToken)
        try container.encodeIfPresent(initialIdToken, forKey: .initialIdToken)
        try container.encodeIfPresent(initialRefreshToken, forKey: .initialRefreshToken)
        try container.encodeIfPresent(provider, forKey: .provider)
        try container.encodeIfPresent(subject, forKey: .subject)
    }
}

