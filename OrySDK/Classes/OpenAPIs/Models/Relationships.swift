//
// Relationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Paginated Relationship List */
public struct Relationships: Codable, JSONEncodable, Hashable {

    /** The opaque token to provide in a subsequent request to get the next page. It is the empty string iff this is the last page. */
    public var nextPageToken: String?
    public var relationTuples: [Relationship]?

    public init(nextPageToken: String? = nil, relationTuples: [Relationship]? = nil) {
        self.nextPageToken = nextPageToken
        self.relationTuples = relationTuples
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case nextPageToken = "next_page_token"
        case relationTuples = "relation_tuples"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(nextPageToken, forKey: .nextPageToken)
        try container.encodeIfPresent(relationTuples, forKey: .relationTuples)
    }
}

