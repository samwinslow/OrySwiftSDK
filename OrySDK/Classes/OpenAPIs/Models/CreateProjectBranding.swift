//
// CreateProjectBranding.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Create a Project Branding */
public struct CreateProjectBranding: Codable, JSONEncodable, Hashable {

    public var logoType: String?
    public var logoUrl: String?
    public var name: String?
    public var theme: ProjectBrandingColors?

    public init(logoType: String? = nil, logoUrl: String? = nil, name: String? = nil, theme: ProjectBrandingColors? = nil) {
        self.logoType = logoType
        self.logoUrl = logoUrl
        self.name = name
        self.theme = theme
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case logoType = "logo_type"
        case logoUrl = "logo_url"
        case name
        case theme
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(logoType, forKey: .logoType)
        try container.encodeIfPresent(logoUrl, forKey: .logoUrl)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(theme, forKey: .theme)
    }
}

