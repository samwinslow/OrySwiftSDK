//
// OAuth2ConsentSessionExpiresAt.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OAuth2ConsentSessionExpiresAt: Codable, JSONEncodable, Hashable {

    public var accessToken: Date?
    public var authorizeCode: Date?
    public var idToken: Date?
    public var parContext: Date?
    public var refreshToken: Date?

    public init(accessToken: Date? = nil, authorizeCode: Date? = nil, idToken: Date? = nil, parContext: Date? = nil, refreshToken: Date? = nil) {
        self.accessToken = accessToken
        self.authorizeCode = authorizeCode
        self.idToken = idToken
        self.parContext = parContext
        self.refreshToken = refreshToken
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accessToken = "access_token"
        case authorizeCode = "authorize_code"
        case idToken = "id_token"
        case parContext = "par_context"
        case refreshToken = "refresh_token"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(accessToken, forKey: .accessToken)
        try container.encodeIfPresent(authorizeCode, forKey: .authorizeCode)
        try container.encodeIfPresent(idToken, forKey: .idToken)
        try container.encodeIfPresent(parContext, forKey: .parContext)
        try container.encodeIfPresent(refreshToken, forKey: .refreshToken)
    }
}

