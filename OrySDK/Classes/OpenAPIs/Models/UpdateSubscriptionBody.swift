//
// UpdateSubscriptionBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Update Subscription Request Body */
public struct UpdateSubscriptionBody: Codable, JSONEncodable, Hashable {

    public enum Interval: String, Codable, CaseIterable {
        case monthly = "monthly"
        case yearly = "yearly"
    }
    /**  monthly Monthly yearly Yearly */
    public var interval: Interval
    public var plan: String
    public var returnTo: String?

    public init(interval: Interval, plan: String, returnTo: String? = nil) {
        self.interval = interval
        self.plan = plan
        self.returnTo = returnTo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case interval
        case plan
        case returnTo = "return_to"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(interval, forKey: .interval)
        try container.encode(plan, forKey: .plan)
        try container.encodeIfPresent(returnTo, forKey: .returnTo)
    }
}

