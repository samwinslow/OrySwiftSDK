//
// GenericUsage.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GenericUsage: Codable, JSONEncodable, Hashable {

    /** AdditionalPrice is the price per-unit exceeding IncludedUsage. A price of 0 means that no other items can be consumed. */
    public var additionalPrice: Int64
    /** IncludedUsage is the number of included items. */
    public var includedUsage: Int64

    public init(additionalPrice: Int64, includedUsage: Int64) {
        self.additionalPrice = additionalPrice
        self.includedUsage = includedUsage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case additionalPrice = "additional_price"
        case includedUsage = "included_usage"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(additionalPrice, forKey: .additionalPrice)
        try container.encode(includedUsage, forKey: .includedUsage)
    }
}

