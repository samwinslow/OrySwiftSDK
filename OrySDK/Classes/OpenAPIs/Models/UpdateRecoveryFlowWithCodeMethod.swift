//
// UpdateRecoveryFlowWithCodeMethod.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Update Recovery Flow with Code Method */
public struct UpdateRecoveryFlowWithCodeMethod: Codable, JSONEncodable, Hashable {

    /** Code from recovery email  Sent to the user once a recovery has been initiated and is used to prove that the user is in possession of the email */
    public var code: String?
    /** Sending the anti-csrf token is only required for browser login flows. */
    public var csrfToken: String?
    /** Email to Recover  Needs to be set when initiating the flow. If the email is a registered recovery email, a recovery link will be sent. If the email is not known, a email with details on what happened will be sent instead.  format: email */
    public var email: String?
    /** Method supports `link` and `code` only right now. */
    public var method: String

    public init(code: String? = nil, csrfToken: String? = nil, email: String? = nil, method: String) {
        self.code = code
        self.csrfToken = csrfToken
        self.email = email
        self.method = method
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case csrfToken = "csrf_token"
        case email
        case method
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(csrfToken, forKey: .csrfToken)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encode(method, forKey: .method)
    }
}

