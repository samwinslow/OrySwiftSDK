//
// OAuth2ClientTokenLifespans.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Lifespans of different token types issued for this OAuth 2.0 Client. */
public struct OAuth2ClientTokenLifespans: Codable, JSONEncodable, Hashable {

    static let authorizationCodeGrantAccessTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let authorizationCodeGrantIdTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let authorizationCodeGrantRefreshTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let clientCredentialsGrantAccessTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let implicitGrantAccessTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let implicitGrantIdTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let jwtBearerGrantAccessTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let refreshTokenGrantAccessTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let refreshTokenGrantIdTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    static let refreshTokenGrantRefreshTokenLifespanRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]+(ns|us|ms|s|m|h)$/")
    public var authorizationCodeGrantAccessTokenLifespan: String?
    public var authorizationCodeGrantIdTokenLifespan: String?
    public var authorizationCodeGrantRefreshTokenLifespan: String?
    public var clientCredentialsGrantAccessTokenLifespan: String?
    public var implicitGrantAccessTokenLifespan: String?
    public var implicitGrantIdTokenLifespan: String?
    public var jwtBearerGrantAccessTokenLifespan: String?
    public var refreshTokenGrantAccessTokenLifespan: String?
    public var refreshTokenGrantIdTokenLifespan: String?
    public var refreshTokenGrantRefreshTokenLifespan: String?

    public init(authorizationCodeGrantAccessTokenLifespan: String? = nil, authorizationCodeGrantIdTokenLifespan: String? = nil, authorizationCodeGrantRefreshTokenLifespan: String? = nil, clientCredentialsGrantAccessTokenLifespan: String? = nil, implicitGrantAccessTokenLifespan: String? = nil, implicitGrantIdTokenLifespan: String? = nil, jwtBearerGrantAccessTokenLifespan: String? = nil, refreshTokenGrantAccessTokenLifespan: String? = nil, refreshTokenGrantIdTokenLifespan: String? = nil, refreshTokenGrantRefreshTokenLifespan: String? = nil) {
        self.authorizationCodeGrantAccessTokenLifespan = authorizationCodeGrantAccessTokenLifespan
        self.authorizationCodeGrantIdTokenLifespan = authorizationCodeGrantIdTokenLifespan
        self.authorizationCodeGrantRefreshTokenLifespan = authorizationCodeGrantRefreshTokenLifespan
        self.clientCredentialsGrantAccessTokenLifespan = clientCredentialsGrantAccessTokenLifespan
        self.implicitGrantAccessTokenLifespan = implicitGrantAccessTokenLifespan
        self.implicitGrantIdTokenLifespan = implicitGrantIdTokenLifespan
        self.jwtBearerGrantAccessTokenLifespan = jwtBearerGrantAccessTokenLifespan
        self.refreshTokenGrantAccessTokenLifespan = refreshTokenGrantAccessTokenLifespan
        self.refreshTokenGrantIdTokenLifespan = refreshTokenGrantIdTokenLifespan
        self.refreshTokenGrantRefreshTokenLifespan = refreshTokenGrantRefreshTokenLifespan
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case authorizationCodeGrantAccessTokenLifespan = "authorization_code_grant_access_token_lifespan"
        case authorizationCodeGrantIdTokenLifespan = "authorization_code_grant_id_token_lifespan"
        case authorizationCodeGrantRefreshTokenLifespan = "authorization_code_grant_refresh_token_lifespan"
        case clientCredentialsGrantAccessTokenLifespan = "client_credentials_grant_access_token_lifespan"
        case implicitGrantAccessTokenLifespan = "implicit_grant_access_token_lifespan"
        case implicitGrantIdTokenLifespan = "implicit_grant_id_token_lifespan"
        case jwtBearerGrantAccessTokenLifespan = "jwt_bearer_grant_access_token_lifespan"
        case refreshTokenGrantAccessTokenLifespan = "refresh_token_grant_access_token_lifespan"
        case refreshTokenGrantIdTokenLifespan = "refresh_token_grant_id_token_lifespan"
        case refreshTokenGrantRefreshTokenLifespan = "refresh_token_grant_refresh_token_lifespan"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(authorizationCodeGrantAccessTokenLifespan, forKey: .authorizationCodeGrantAccessTokenLifespan)
        try container.encodeIfPresent(authorizationCodeGrantIdTokenLifespan, forKey: .authorizationCodeGrantIdTokenLifespan)
        try container.encodeIfPresent(authorizationCodeGrantRefreshTokenLifespan, forKey: .authorizationCodeGrantRefreshTokenLifespan)
        try container.encodeIfPresent(clientCredentialsGrantAccessTokenLifespan, forKey: .clientCredentialsGrantAccessTokenLifespan)
        try container.encodeIfPresent(implicitGrantAccessTokenLifespan, forKey: .implicitGrantAccessTokenLifespan)
        try container.encodeIfPresent(implicitGrantIdTokenLifespan, forKey: .implicitGrantIdTokenLifespan)
        try container.encodeIfPresent(jwtBearerGrantAccessTokenLifespan, forKey: .jwtBearerGrantAccessTokenLifespan)
        try container.encodeIfPresent(refreshTokenGrantAccessTokenLifespan, forKey: .refreshTokenGrantAccessTokenLifespan)
        try container.encodeIfPresent(refreshTokenGrantIdTokenLifespan, forKey: .refreshTokenGrantIdTokenLifespan)
        try container.encodeIfPresent(refreshTokenGrantRefreshTokenLifespan, forKey: .refreshTokenGrantRefreshTokenLifespan)
    }
}

